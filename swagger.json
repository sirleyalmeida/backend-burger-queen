{
    "swagger": "2.0",
    "info": {
        "description": "This is a BurgerQueen API.\n",
        "version": "1.0.0",
        "title": "Swagger BurgerQueen",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "sirleyas90@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "About users"
        },
        {
            "name": "menu",
            "description": "About products, price and type by menu"
        },
        {
            "name": "ordersmenu",
            "description": "Acess to menu on orders"
        },
        {
            "name": "orders",
            "description": "Access to orders"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The users name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "postUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "putUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/menu": {
            "post": {
                "tags": [
                    "menu"
                ],
                "summary": "Create product, price and type by menu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Menu"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "Get product, price and type on menu",
                "description": "Multiple status values can be provided with comma separated strings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that need to be considered for filter",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ],
                            "default": "available"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Menu"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            },
            "put": {
                "tags": [
                    "menu"
                ],
                "summary": "Update product, price and type on menu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Menu"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Menu not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            },
            "delete": {
                "tags": [
                    "menu"
                ],
                "summary": "Delete product, price and type on menu",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteMenu",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid menu supplied"
                    },
                    "404": {
                        "description": "Menu not found"
                    }
                }
            }
        },
        "/ordermenu": {
            "post": {
                "tags": [
                    "ordersmenu"
                ],
                "summary": "Create ordermenu",
                "operationId": "postOrderMenu",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrdersMenu"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "ordersmenu"
                ],
                "summary": "Get order by menu",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            },
            "put": {
                "tags": [
                    "ordersmenu"
                ],
                "summary": "Updated order",
                "description": "This can only be done by the logged in user.",
                "operationId": "putOrder",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrdersMenu"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid order supplied"
                    },
                    "404": {
                        "description": "OrdersMenu not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ordersmenu"
                ],
                "summary": "Delete order by Menu",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteOrder",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/order": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Create order",
                "operationId": "postOrder",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Orders"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Get order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            },
            "put": {
                "tags": [
                    "orders"
                ],
                "summary": "Updated order",
                "description": "This can only be done by the logged in user.",
                "operationId": "putOrderMenu",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Orders"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid order supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "orders"
                ],
                "summary": "Delete order",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteOrderMenu",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Orders": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "xml": {
                "name": "Orders"
            }
        },
        "OrdersMenu": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "menuId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "xml": {
                "name": "Orders"
            }
        },
        "Menu": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "product": {
                    "type": "string"
                },
                "productPrice": {
                    "type": "number"
                },
                "typeMenu": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "menu"
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Users"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "host": "virtserver.swaggerhub.com",
    "basePath": "/burgerqueen/BurgerQueen/1.0.0",
    "schemes": [
        "https",
        "http"
    ]
}